// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	fiber "github.com/gofiber/fiber/v2"
	mock "github.com/stretchr/testify/mock"
)

// OrderController is an autogenerated mock type for the OrderController type
type OrderController struct {
	mock.Mock
}

// GetAll provides a mock function with given fields: _a0
func (_m *OrderController) GetAll(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Post provides a mock function with given fields: _a0
func (_m *OrderController) Post(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOrderController interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrderController creates a new instance of OrderController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrderController(t mockConstructorTestingTNewOrderController) *OrderController {
	mock := &OrderController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
